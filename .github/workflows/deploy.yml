name: CD - Deploy to Docker Swarm

on:
  workflow_run:
    workflows: ["CI - Build and Push Docker Images"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install SSH key
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" | tr -d '\r' > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -p 8822 ${{ secrets.SERVER }} >> ~/.ssh/known_hosts

      - name: Deploy stack
        run: |
          # Copy compose file
          scp -o "StrictHostKeyChecking=no" \
              -i ~/.ssh/deploy_key \
              -P 8822 \
              docker-compose.yml \
              ${{ secrets.SERVERUSER }}@${{ secrets.SERVER }}:~/video-downloader/

          # Execute remote commands
          ssh -o "StrictHostKeyChecking=no" \
              -i ~/.ssh/deploy_key \
              -p 8822 \
              ${{ secrets.SERVERUSER }}@${{ secrets.SERVER }} << 'EOF'
              set -e
              cd ~/video-downloader
              
              # Initialize Swarm if needed
              if ! docker node ls &>/dev/null; then
                echo "Initializing Docker Swarm..."
                docker swarm init --advertise-addr eth0
              fi

              # Update secrets
              echo "${{ secrets.API_TOKEN }}" | docker secret create api_token - 2>/dev/null || \
                echo "Secret api_token already exists, skipping..."
              echo "${{ secrets.TELEGRAM_TOKEN }}" | docker secret create telegram_token - 2>/dev/null || \
                echo "Secret telegram_token already exists, skipping..."

              # Pull and deploy
              export DOCKERHUB_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
              docker login -u $DOCKERHUB_USERNAME -p "${{ secrets.DOCKERHUB_TOKEN }}"
              docker stack deploy -c docker-compose.yml --with-registry-auth video-downloader
          EOF