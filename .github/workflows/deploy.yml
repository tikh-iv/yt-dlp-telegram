name: CD - Deploy to Docker Swarm

on:
  workflow_run:
    workflows: ["CI - Build and Push Docker Images"]
    types:
      - completed

jobs:
  deploy:
    runs-on: ubuntu-latest
    if: ${{ github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup SSH
      run: |
        mkdir -p ~/.ssh
        echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
        chmod 600 ~/.ssh/deploy_key
        ssh-keyscan -p ${{ secrets.SSH_PORT }} ${{ secrets.SERVER }} >> ~/.ssh/known_hosts

    - name: Deploy stack
      run: |
        ssh -tt -p 8822 -i ~/.ssh/deploy_key \
          ${{ secrets.SERVERUSER }}@${{ secrets.SERVER }} \
          /bin/bash <<-'ENDSSH'
            # Setup environment
            export DOCKERHUB_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
            APP_DIR="/home/${{ secrets.SERVERUSER }}/video-downloader"
            mkdir -p $APP_DIR
            
            # Copy compose file
            docker-compose.yml > $APP_DIR/docker-compose.yml
            
            # Initialize Swarm if needed
            if ! docker node ls &>/dev/null; then
              docker swarm init
            fi

            # Create secrets
            echo "${{ secrets.API_TOKEN }}" | docker secret create api_token - 2>/dev/null || true
            echo "${{ secrets.TELEGRAM_TOKEN }}" | docker secret create telegram_token - 2>/dev/null || true

            # Deploy stack
            docker stack deploy -c $APP_DIR/docker-compose.yml video-downloader --with-registry-auth
        ENDSSH
      env:
        DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}